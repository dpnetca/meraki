/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 July, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.23.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meraki

import (
	"encoding/json"
)

// CreateNetworkWirelessRfProfileRequest struct for CreateNetworkWirelessRfProfileRequest
type CreateNetworkWirelessRfProfileRequest struct {
	// The name of the new profile. Must be unique. This param is required on creation.
	Name string `json:"name"`
	// Steers client to best available access point. Can be either true or false. Defaults to true.
	ClientBalancingEnabled *bool `json:"clientBalancingEnabled,omitempty"`
	// Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
	MinBitrateType *string `json:"minBitrateType,omitempty"`
	// Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
	BandSelectionType string `json:"bandSelectionType"`
	ApBandSettings *CreateNetworkWirelessRfProfileRequestApBandSettings `json:"apBandSettings,omitempty"`
	TwoFourGhzSettings *CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings `json:"twoFourGhzSettings,omitempty"`
	FiveGhzSettings *CreateNetworkWirelessRfProfileRequestFiveGhzSettings `json:"fiveGhzSettings,omitempty"`
	Transmission *CreateNetworkWirelessRfProfileRequestTransmission `json:"transmission,omitempty"`
	PerSsidSettings *CreateNetworkWirelessRfProfileRequestPerSsidSettings `json:"perSsidSettings,omitempty"`
}

// NewCreateNetworkWirelessRfProfileRequest instantiates a new CreateNetworkWirelessRfProfileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkWirelessRfProfileRequest(name string, bandSelectionType string) *CreateNetworkWirelessRfProfileRequest {
	this := CreateNetworkWirelessRfProfileRequest{}
	this.Name = name
	this.BandSelectionType = bandSelectionType
	return &this
}

// NewCreateNetworkWirelessRfProfileRequestWithDefaults instantiates a new CreateNetworkWirelessRfProfileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkWirelessRfProfileRequestWithDefaults() *CreateNetworkWirelessRfProfileRequest {
	this := CreateNetworkWirelessRfProfileRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateNetworkWirelessRfProfileRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfileRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateNetworkWirelessRfProfileRequest) SetName(v string) {
	o.Name = v
}

// GetClientBalancingEnabled returns the ClientBalancingEnabled field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfileRequest) GetClientBalancingEnabled() bool {
	if o == nil || o.ClientBalancingEnabled == nil {
		var ret bool
		return ret
	}
	return *o.ClientBalancingEnabled
}

// GetClientBalancingEnabledOk returns a tuple with the ClientBalancingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfileRequest) GetClientBalancingEnabledOk() (*bool, bool) {
	if o == nil || o.ClientBalancingEnabled == nil {
		return nil, false
	}
	return o.ClientBalancingEnabled, true
}

// HasClientBalancingEnabled returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfileRequest) HasClientBalancingEnabled() bool {
	if o != nil && o.ClientBalancingEnabled != nil {
		return true
	}

	return false
}

// SetClientBalancingEnabled gets a reference to the given bool and assigns it to the ClientBalancingEnabled field.
func (o *CreateNetworkWirelessRfProfileRequest) SetClientBalancingEnabled(v bool) {
	o.ClientBalancingEnabled = &v
}

// GetMinBitrateType returns the MinBitrateType field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfileRequest) GetMinBitrateType() string {
	if o == nil || o.MinBitrateType == nil {
		var ret string
		return ret
	}
	return *o.MinBitrateType
}

// GetMinBitrateTypeOk returns a tuple with the MinBitrateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfileRequest) GetMinBitrateTypeOk() (*string, bool) {
	if o == nil || o.MinBitrateType == nil {
		return nil, false
	}
	return o.MinBitrateType, true
}

// HasMinBitrateType returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfileRequest) HasMinBitrateType() bool {
	if o != nil && o.MinBitrateType != nil {
		return true
	}

	return false
}

// SetMinBitrateType gets a reference to the given string and assigns it to the MinBitrateType field.
func (o *CreateNetworkWirelessRfProfileRequest) SetMinBitrateType(v string) {
	o.MinBitrateType = &v
}

// GetBandSelectionType returns the BandSelectionType field value
func (o *CreateNetworkWirelessRfProfileRequest) GetBandSelectionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BandSelectionType
}

// GetBandSelectionTypeOk returns a tuple with the BandSelectionType field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfileRequest) GetBandSelectionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BandSelectionType, true
}

// SetBandSelectionType sets field value
func (o *CreateNetworkWirelessRfProfileRequest) SetBandSelectionType(v string) {
	o.BandSelectionType = v
}

// GetApBandSettings returns the ApBandSettings field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfileRequest) GetApBandSettings() CreateNetworkWirelessRfProfileRequestApBandSettings {
	if o == nil || o.ApBandSettings == nil {
		var ret CreateNetworkWirelessRfProfileRequestApBandSettings
		return ret
	}
	return *o.ApBandSettings
}

// GetApBandSettingsOk returns a tuple with the ApBandSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfileRequest) GetApBandSettingsOk() (*CreateNetworkWirelessRfProfileRequestApBandSettings, bool) {
	if o == nil || o.ApBandSettings == nil {
		return nil, false
	}
	return o.ApBandSettings, true
}

// HasApBandSettings returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfileRequest) HasApBandSettings() bool {
	if o != nil && o.ApBandSettings != nil {
		return true
	}

	return false
}

// SetApBandSettings gets a reference to the given CreateNetworkWirelessRfProfileRequestApBandSettings and assigns it to the ApBandSettings field.
func (o *CreateNetworkWirelessRfProfileRequest) SetApBandSettings(v CreateNetworkWirelessRfProfileRequestApBandSettings) {
	o.ApBandSettings = &v
}

// GetTwoFourGhzSettings returns the TwoFourGhzSettings field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfileRequest) GetTwoFourGhzSettings() CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings {
	if o == nil || o.TwoFourGhzSettings == nil {
		var ret CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings
		return ret
	}
	return *o.TwoFourGhzSettings
}

// GetTwoFourGhzSettingsOk returns a tuple with the TwoFourGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfileRequest) GetTwoFourGhzSettingsOk() (*CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings, bool) {
	if o == nil || o.TwoFourGhzSettings == nil {
		return nil, false
	}
	return o.TwoFourGhzSettings, true
}

// HasTwoFourGhzSettings returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfileRequest) HasTwoFourGhzSettings() bool {
	if o != nil && o.TwoFourGhzSettings != nil {
		return true
	}

	return false
}

// SetTwoFourGhzSettings gets a reference to the given CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings and assigns it to the TwoFourGhzSettings field.
func (o *CreateNetworkWirelessRfProfileRequest) SetTwoFourGhzSettings(v CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings) {
	o.TwoFourGhzSettings = &v
}

// GetFiveGhzSettings returns the FiveGhzSettings field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfileRequest) GetFiveGhzSettings() CreateNetworkWirelessRfProfileRequestFiveGhzSettings {
	if o == nil || o.FiveGhzSettings == nil {
		var ret CreateNetworkWirelessRfProfileRequestFiveGhzSettings
		return ret
	}
	return *o.FiveGhzSettings
}

// GetFiveGhzSettingsOk returns a tuple with the FiveGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfileRequest) GetFiveGhzSettingsOk() (*CreateNetworkWirelessRfProfileRequestFiveGhzSettings, bool) {
	if o == nil || o.FiveGhzSettings == nil {
		return nil, false
	}
	return o.FiveGhzSettings, true
}

// HasFiveGhzSettings returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfileRequest) HasFiveGhzSettings() bool {
	if o != nil && o.FiveGhzSettings != nil {
		return true
	}

	return false
}

// SetFiveGhzSettings gets a reference to the given CreateNetworkWirelessRfProfileRequestFiveGhzSettings and assigns it to the FiveGhzSettings field.
func (o *CreateNetworkWirelessRfProfileRequest) SetFiveGhzSettings(v CreateNetworkWirelessRfProfileRequestFiveGhzSettings) {
	o.FiveGhzSettings = &v
}

// GetTransmission returns the Transmission field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfileRequest) GetTransmission() CreateNetworkWirelessRfProfileRequestTransmission {
	if o == nil || o.Transmission == nil {
		var ret CreateNetworkWirelessRfProfileRequestTransmission
		return ret
	}
	return *o.Transmission
}

// GetTransmissionOk returns a tuple with the Transmission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfileRequest) GetTransmissionOk() (*CreateNetworkWirelessRfProfileRequestTransmission, bool) {
	if o == nil || o.Transmission == nil {
		return nil, false
	}
	return o.Transmission, true
}

// HasTransmission returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfileRequest) HasTransmission() bool {
	if o != nil && o.Transmission != nil {
		return true
	}

	return false
}

// SetTransmission gets a reference to the given CreateNetworkWirelessRfProfileRequestTransmission and assigns it to the Transmission field.
func (o *CreateNetworkWirelessRfProfileRequest) SetTransmission(v CreateNetworkWirelessRfProfileRequestTransmission) {
	o.Transmission = &v
}

// GetPerSsidSettings returns the PerSsidSettings field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfileRequest) GetPerSsidSettings() CreateNetworkWirelessRfProfileRequestPerSsidSettings {
	if o == nil || o.PerSsidSettings == nil {
		var ret CreateNetworkWirelessRfProfileRequestPerSsidSettings
		return ret
	}
	return *o.PerSsidSettings
}

// GetPerSsidSettingsOk returns a tuple with the PerSsidSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfileRequest) GetPerSsidSettingsOk() (*CreateNetworkWirelessRfProfileRequestPerSsidSettings, bool) {
	if o == nil || o.PerSsidSettings == nil {
		return nil, false
	}
	return o.PerSsidSettings, true
}

// HasPerSsidSettings returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfileRequest) HasPerSsidSettings() bool {
	if o != nil && o.PerSsidSettings != nil {
		return true
	}

	return false
}

// SetPerSsidSettings gets a reference to the given CreateNetworkWirelessRfProfileRequestPerSsidSettings and assigns it to the PerSsidSettings field.
func (o *CreateNetworkWirelessRfProfileRequest) SetPerSsidSettings(v CreateNetworkWirelessRfProfileRequestPerSsidSettings) {
	o.PerSsidSettings = &v
}

func (o CreateNetworkWirelessRfProfileRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.ClientBalancingEnabled != nil {
		toSerialize["clientBalancingEnabled"] = o.ClientBalancingEnabled
	}
	if o.MinBitrateType != nil {
		toSerialize["minBitrateType"] = o.MinBitrateType
	}
	if true {
		toSerialize["bandSelectionType"] = o.BandSelectionType
	}
	if o.ApBandSettings != nil {
		toSerialize["apBandSettings"] = o.ApBandSettings
	}
	if o.TwoFourGhzSettings != nil {
		toSerialize["twoFourGhzSettings"] = o.TwoFourGhzSettings
	}
	if o.FiveGhzSettings != nil {
		toSerialize["fiveGhzSettings"] = o.FiveGhzSettings
	}
	if o.Transmission != nil {
		toSerialize["transmission"] = o.Transmission
	}
	if o.PerSsidSettings != nil {
		toSerialize["perSsidSettings"] = o.PerSsidSettings
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNetworkWirelessRfProfileRequest struct {
	value *CreateNetworkWirelessRfProfileRequest
	isSet bool
}

func (v NullableCreateNetworkWirelessRfProfileRequest) Get() *CreateNetworkWirelessRfProfileRequest {
	return v.value
}

func (v *NullableCreateNetworkWirelessRfProfileRequest) Set(val *CreateNetworkWirelessRfProfileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkWirelessRfProfileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkWirelessRfProfileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkWirelessRfProfileRequest(val *CreateNetworkWirelessRfProfileRequest) *NullableCreateNetworkWirelessRfProfileRequest {
	return &NullableCreateNetworkWirelessRfProfileRequest{value: val, isSet: true}
}

func (v NullableCreateNetworkWirelessRfProfileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkWirelessRfProfileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


