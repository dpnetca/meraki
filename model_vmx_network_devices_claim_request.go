/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 July, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.23.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meraki

import (
	"encoding/json"
)

// VmxNetworkDevicesClaimRequest struct for VmxNetworkDevicesClaimRequest
type VmxNetworkDevicesClaimRequest struct {
	// The size of the vMX you claim. It can be one of: small, medium, large, 100
	Size string `json:"size"`
}

// NewVmxNetworkDevicesClaimRequest instantiates a new VmxNetworkDevicesClaimRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmxNetworkDevicesClaimRequest(size string) *VmxNetworkDevicesClaimRequest {
	this := VmxNetworkDevicesClaimRequest{}
	this.Size = size
	return &this
}

// NewVmxNetworkDevicesClaimRequestWithDefaults instantiates a new VmxNetworkDevicesClaimRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmxNetworkDevicesClaimRequestWithDefaults() *VmxNetworkDevicesClaimRequest {
	this := VmxNetworkDevicesClaimRequest{}
	return &this
}

// GetSize returns the Size field value
func (o *VmxNetworkDevicesClaimRequest) GetSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *VmxNetworkDevicesClaimRequest) GetSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *VmxNetworkDevicesClaimRequest) SetSize(v string) {
	o.Size = v
}

func (o VmxNetworkDevicesClaimRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["size"] = o.Size
	}
	return json.Marshal(toSerialize)
}

type NullableVmxNetworkDevicesClaimRequest struct {
	value *VmxNetworkDevicesClaimRequest
	isSet bool
}

func (v NullableVmxNetworkDevicesClaimRequest) Get() *VmxNetworkDevicesClaimRequest {
	return v.value
}

func (v *NullableVmxNetworkDevicesClaimRequest) Set(val *VmxNetworkDevicesClaimRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVmxNetworkDevicesClaimRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVmxNetworkDevicesClaimRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmxNetworkDevicesClaimRequest(val *VmxNetworkDevicesClaimRequest) *NullableVmxNetworkDevicesClaimRequest {
	return &NullableVmxNetworkDevicesClaimRequest{value: val, isSet: true}
}

func (v NullableVmxNetworkDevicesClaimRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmxNetworkDevicesClaimRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


