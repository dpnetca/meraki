/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 July, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.23.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meraki

import (
	"encoding/json"
)

// UpdateDeviceCameraCustomAnalyticsRequest struct for UpdateDeviceCameraCustomAnalyticsRequest
type UpdateDeviceCameraCustomAnalyticsRequest struct {
	// Enable custom analytics
	Enabled *bool `json:"enabled,omitempty"`
	// The ID of the custom analytics artifact
	ArtifactId *string `json:"artifactId,omitempty"`
	// Parameters for the custom analytics workload
	Parameters []UpdateDeviceCameraCustomAnalyticsRequestParametersInner `json:"parameters,omitempty"`
}

// NewUpdateDeviceCameraCustomAnalyticsRequest instantiates a new UpdateDeviceCameraCustomAnalyticsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDeviceCameraCustomAnalyticsRequest() *UpdateDeviceCameraCustomAnalyticsRequest {
	this := UpdateDeviceCameraCustomAnalyticsRequest{}
	return &this
}

// NewUpdateDeviceCameraCustomAnalyticsRequestWithDefaults instantiates a new UpdateDeviceCameraCustomAnalyticsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDeviceCameraCustomAnalyticsRequestWithDefaults() *UpdateDeviceCameraCustomAnalyticsRequest {
	this := UpdateDeviceCameraCustomAnalyticsRequest{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *UpdateDeviceCameraCustomAnalyticsRequest) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeviceCameraCustomAnalyticsRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *UpdateDeviceCameraCustomAnalyticsRequest) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *UpdateDeviceCameraCustomAnalyticsRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetArtifactId returns the ArtifactId field value if set, zero value otherwise.
func (o *UpdateDeviceCameraCustomAnalyticsRequest) GetArtifactId() string {
	if o == nil || o.ArtifactId == nil {
		var ret string
		return ret
	}
	return *o.ArtifactId
}

// GetArtifactIdOk returns a tuple with the ArtifactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeviceCameraCustomAnalyticsRequest) GetArtifactIdOk() (*string, bool) {
	if o == nil || o.ArtifactId == nil {
		return nil, false
	}
	return o.ArtifactId, true
}

// HasArtifactId returns a boolean if a field has been set.
func (o *UpdateDeviceCameraCustomAnalyticsRequest) HasArtifactId() bool {
	if o != nil && o.ArtifactId != nil {
		return true
	}

	return false
}

// SetArtifactId gets a reference to the given string and assigns it to the ArtifactId field.
func (o *UpdateDeviceCameraCustomAnalyticsRequest) SetArtifactId(v string) {
	o.ArtifactId = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *UpdateDeviceCameraCustomAnalyticsRequest) GetParameters() []UpdateDeviceCameraCustomAnalyticsRequestParametersInner {
	if o == nil || o.Parameters == nil {
		var ret []UpdateDeviceCameraCustomAnalyticsRequestParametersInner
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDeviceCameraCustomAnalyticsRequest) GetParametersOk() ([]UpdateDeviceCameraCustomAnalyticsRequestParametersInner, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *UpdateDeviceCameraCustomAnalyticsRequest) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []UpdateDeviceCameraCustomAnalyticsRequestParametersInner and assigns it to the Parameters field.
func (o *UpdateDeviceCameraCustomAnalyticsRequest) SetParameters(v []UpdateDeviceCameraCustomAnalyticsRequestParametersInner) {
	o.Parameters = v
}

func (o UpdateDeviceCameraCustomAnalyticsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.ArtifactId != nil {
		toSerialize["artifactId"] = o.ArtifactId
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateDeviceCameraCustomAnalyticsRequest struct {
	value *UpdateDeviceCameraCustomAnalyticsRequest
	isSet bool
}

func (v NullableUpdateDeviceCameraCustomAnalyticsRequest) Get() *UpdateDeviceCameraCustomAnalyticsRequest {
	return v.value
}

func (v *NullableUpdateDeviceCameraCustomAnalyticsRequest) Set(val *UpdateDeviceCameraCustomAnalyticsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDeviceCameraCustomAnalyticsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDeviceCameraCustomAnalyticsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDeviceCameraCustomAnalyticsRequest(val *UpdateDeviceCameraCustomAnalyticsRequest) *NullableUpdateDeviceCameraCustomAnalyticsRequest {
	return &NullableUpdateDeviceCameraCustomAnalyticsRequest{value: val, isSet: true}
}

func (v NullableUpdateDeviceCameraCustomAnalyticsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDeviceCameraCustomAnalyticsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


