/*
Meraki Dashboard API

Testing TargetGroupsApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package meraki

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/dpnetca/meraki"
)

func Test_meraki_TargetGroupsApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test TargetGroupsApiService CreateNetworkSmTargetGroup", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string

		resp, httpRes, err := apiClient.TargetGroupsApi.CreateNetworkSmTargetGroup(context.Background(), networkId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TargetGroupsApiService DeleteNetworkSmTargetGroup", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string
		var targetGroupId string

		httpRes, err := apiClient.TargetGroupsApi.DeleteNetworkSmTargetGroup(context.Background(), networkId, targetGroupId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TargetGroupsApiService GetNetworkSmTargetGroup", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string
		var targetGroupId string

		resp, httpRes, err := apiClient.TargetGroupsApi.GetNetworkSmTargetGroup(context.Background(), networkId, targetGroupId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TargetGroupsApiService GetNetworkSmTargetGroups", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string

		resp, httpRes, err := apiClient.TargetGroupsApi.GetNetworkSmTargetGroups(context.Background(), networkId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TargetGroupsApiService UpdateNetworkSmTargetGroup", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkId string
		var targetGroupId string

		resp, httpRes, err := apiClient.TargetGroupsApi.UpdateNetworkSmTargetGroup(context.Background(), networkId, targetGroupId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
