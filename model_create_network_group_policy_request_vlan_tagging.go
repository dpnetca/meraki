/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.32.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meraki

import (
	"encoding/json"
)

// checks if the CreateNetworkGroupPolicyRequestVlanTagging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkGroupPolicyRequestVlanTagging{}

// CreateNetworkGroupPolicyRequestVlanTagging The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.
type CreateNetworkGroupPolicyRequestVlanTagging struct {
	// How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'.
	Settings *string `json:"settings,omitempty"`
	// The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'.
	VlanId *string `json:"vlanId,omitempty"`
}

// NewCreateNetworkGroupPolicyRequestVlanTagging instantiates a new CreateNetworkGroupPolicyRequestVlanTagging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkGroupPolicyRequestVlanTagging() *CreateNetworkGroupPolicyRequestVlanTagging {
	this := CreateNetworkGroupPolicyRequestVlanTagging{}
	return &this
}

// NewCreateNetworkGroupPolicyRequestVlanTaggingWithDefaults instantiates a new CreateNetworkGroupPolicyRequestVlanTagging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkGroupPolicyRequestVlanTaggingWithDefaults() *CreateNetworkGroupPolicyRequestVlanTagging {
	this := CreateNetworkGroupPolicyRequestVlanTagging{}
	return &this
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *CreateNetworkGroupPolicyRequestVlanTagging) GetSettings() string {
	if o == nil || IsNil(o.Settings) {
		var ret string
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkGroupPolicyRequestVlanTagging) GetSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *CreateNetworkGroupPolicyRequestVlanTagging) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given string and assigns it to the Settings field.
func (o *CreateNetworkGroupPolicyRequestVlanTagging) SetSettings(v string) {
	o.Settings = &v
}

// GetVlanId returns the VlanId field value if set, zero value otherwise.
func (o *CreateNetworkGroupPolicyRequestVlanTagging) GetVlanId() string {
	if o == nil || IsNil(o.VlanId) {
		var ret string
		return ret
	}
	return *o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkGroupPolicyRequestVlanTagging) GetVlanIdOk() (*string, bool) {
	if o == nil || IsNil(o.VlanId) {
		return nil, false
	}
	return o.VlanId, true
}

// HasVlanId returns a boolean if a field has been set.
func (o *CreateNetworkGroupPolicyRequestVlanTagging) HasVlanId() bool {
	if o != nil && !IsNil(o.VlanId) {
		return true
	}

	return false
}

// SetVlanId gets a reference to the given string and assigns it to the VlanId field.
func (o *CreateNetworkGroupPolicyRequestVlanTagging) SetVlanId(v string) {
	o.VlanId = &v
}

func (o CreateNetworkGroupPolicyRequestVlanTagging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkGroupPolicyRequestVlanTagging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	if !IsNil(o.VlanId) {
		toSerialize["vlanId"] = o.VlanId
	}
	return toSerialize, nil
}

type NullableCreateNetworkGroupPolicyRequestVlanTagging struct {
	value *CreateNetworkGroupPolicyRequestVlanTagging
	isSet bool
}

func (v NullableCreateNetworkGroupPolicyRequestVlanTagging) Get() *CreateNetworkGroupPolicyRequestVlanTagging {
	return v.value
}

func (v *NullableCreateNetworkGroupPolicyRequestVlanTagging) Set(val *CreateNetworkGroupPolicyRequestVlanTagging) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkGroupPolicyRequestVlanTagging) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkGroupPolicyRequestVlanTagging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkGroupPolicyRequestVlanTagging(val *CreateNetworkGroupPolicyRequestVlanTagging) *NullableCreateNetworkGroupPolicyRequestVlanTagging {
	return &NullableCreateNetworkGroupPolicyRequestVlanTagging{value: val, isSet: true}
}

func (v NullableCreateNetworkGroupPolicyRequestVlanTagging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkGroupPolicyRequestVlanTagging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


