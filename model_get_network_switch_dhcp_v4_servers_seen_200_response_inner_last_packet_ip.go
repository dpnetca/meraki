/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 July, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.23.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meraki

import (
	"encoding/json"
)

// GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp Additional IP attributes of the packet.
type GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp struct {
	// IP ID of the packet.
	Id *string `json:"id,omitempty"`
	// IP version of the packet.
	Version *int32 `json:"version,omitempty"`
	// IP length of the packet.
	Length *int32 `json:"length,omitempty"`
	// IP header length of the packet.
	HeaderLength *int32 `json:"headerLength,omitempty"`
	// IP protocol number of the packet.
	Protocol *int32 `json:"protocol,omitempty"`
	// Time to live of the packet.
	Ttl *int32 `json:"ttl,omitempty"`
	Dscp *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpDscp `json:"dscp,omitempty"`
}

// NewGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp instantiates a new GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp() *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp {
	this := GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp{}
	return &this
}

// NewGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpWithDefaults instantiates a new GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpWithDefaults() *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp {
	this := GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) SetId(v string) {
	o.Id = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) SetVersion(v int32) {
	o.Version = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetLength() int32 {
	if o == nil || o.Length == nil {
		var ret int32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetLengthOk() (*int32, bool) {
	if o == nil || o.Length == nil {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) HasLength() bool {
	if o != nil && o.Length != nil {
		return true
	}

	return false
}

// SetLength gets a reference to the given int32 and assigns it to the Length field.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) SetLength(v int32) {
	o.Length = &v
}

// GetHeaderLength returns the HeaderLength field value if set, zero value otherwise.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetHeaderLength() int32 {
	if o == nil || o.HeaderLength == nil {
		var ret int32
		return ret
	}
	return *o.HeaderLength
}

// GetHeaderLengthOk returns a tuple with the HeaderLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetHeaderLengthOk() (*int32, bool) {
	if o == nil || o.HeaderLength == nil {
		return nil, false
	}
	return o.HeaderLength, true
}

// HasHeaderLength returns a boolean if a field has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) HasHeaderLength() bool {
	if o != nil && o.HeaderLength != nil {
		return true
	}

	return false
}

// SetHeaderLength gets a reference to the given int32 and assigns it to the HeaderLength field.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) SetHeaderLength(v int32) {
	o.HeaderLength = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetProtocol() int32 {
	if o == nil || o.Protocol == nil {
		var ret int32
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetProtocolOk() (*int32, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given int32 and assigns it to the Protocol field.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) SetProtocol(v int32) {
	o.Protocol = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetTtl() int32 {
	if o == nil || o.Ttl == nil {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetTtlOk() (*int32, bool) {
	if o == nil || o.Ttl == nil {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) HasTtl() bool {
	if o != nil && o.Ttl != nil {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) SetTtl(v int32) {
	o.Ttl = &v
}

// GetDscp returns the Dscp field value if set, zero value otherwise.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetDscp() GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpDscp {
	if o == nil || o.Dscp == nil {
		var ret GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpDscp
		return ret
	}
	return *o.Dscp
}

// GetDscpOk returns a tuple with the Dscp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) GetDscpOk() (*GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpDscp, bool) {
	if o == nil || o.Dscp == nil {
		return nil, false
	}
	return o.Dscp, true
}

// HasDscp returns a boolean if a field has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) HasDscp() bool {
	if o != nil && o.Dscp != nil {
		return true
	}

	return false
}

// SetDscp gets a reference to the given GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpDscp and assigns it to the Dscp field.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) SetDscp(v GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIpDscp) {
	o.Dscp = &v
}

func (o GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Length != nil {
		toSerialize["length"] = o.Length
	}
	if o.HeaderLength != nil {
		toSerialize["headerLength"] = o.HeaderLength
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	if o.Ttl != nil {
		toSerialize["ttl"] = o.Ttl
	}
	if o.Dscp != nil {
		toSerialize["dscp"] = o.Dscp
	}
	return json.Marshal(toSerialize)
}

type NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp struct {
	value *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp
	isSet bool
}

func (v NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) Get() *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp {
	return v.value
}

func (v *NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) Set(val *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp(val *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) *NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp {
	return &NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp{value: val, isSet: true}
}

func (v NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketIp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


