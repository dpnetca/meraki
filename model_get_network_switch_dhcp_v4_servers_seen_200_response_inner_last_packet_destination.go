/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 July, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.23.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meraki

import (
	"encoding/json"
)

// GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination Destination of the packet.
type GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination struct {
	// Destination mac address of the packet.
	Mac *string `json:"mac,omitempty"`
	Ipv4 *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestinationIpv4 `json:"ipv4,omitempty"`
	// Destination port of the packet.
	Port *int32 `json:"port,omitempty"`
}

// NewGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination instantiates a new GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination() *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination {
	this := GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination{}
	return &this
}

// NewGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestinationWithDefaults instantiates a new GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestinationWithDefaults() *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination {
	this := GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination{}
	return &this
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) GetMac() string {
	if o == nil || o.Mac == nil {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) GetMacOk() (*string, bool) {
	if o == nil || o.Mac == nil {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) HasMac() bool {
	if o != nil && o.Mac != nil {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) SetMac(v string) {
	o.Mac = &v
}

// GetIpv4 returns the Ipv4 field value if set, zero value otherwise.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) GetIpv4() GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestinationIpv4 {
	if o == nil || o.Ipv4 == nil {
		var ret GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestinationIpv4
		return ret
	}
	return *o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) GetIpv4Ok() (*GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestinationIpv4, bool) {
	if o == nil || o.Ipv4 == nil {
		return nil, false
	}
	return o.Ipv4, true
}

// HasIpv4 returns a boolean if a field has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) HasIpv4() bool {
	if o != nil && o.Ipv4 != nil {
		return true
	}

	return false
}

// SetIpv4 gets a reference to the given GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestinationIpv4 and assigns it to the Ipv4 field.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) SetIpv4(v GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestinationIpv4) {
	o.Ipv4 = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) SetPort(v int32) {
	o.Port = &v
}

func (o GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Mac != nil {
		toSerialize["mac"] = o.Mac
	}
	if o.Ipv4 != nil {
		toSerialize["ipv4"] = o.Ipv4
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	return json.Marshal(toSerialize)
}

type NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination struct {
	value *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination
	isSet bool
}

func (v NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) Get() *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination {
	return v.value
}

func (v *NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) Set(val *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination(val *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) *NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination {
	return &NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination{value: val, isSet: true}
}

func (v NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerLastPacketDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


