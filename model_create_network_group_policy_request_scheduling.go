/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 July, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.23.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meraki

import (
	"encoding/json"
)

// CreateNetworkGroupPolicyRequestScheduling     The schedule for the group policy. Schedules are applied to days of the week. 
type CreateNetworkGroupPolicyRequestScheduling struct {
	// Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed.
	Enabled *bool `json:"enabled,omitempty"`
	Monday *CreateNetworkGroupPolicyRequestSchedulingMonday `json:"monday,omitempty"`
	Tuesday *CreateNetworkGroupPolicyRequestSchedulingTuesday `json:"tuesday,omitempty"`
	Wednesday *CreateNetworkGroupPolicyRequestSchedulingWednesday `json:"wednesday,omitempty"`
	Thursday *CreateNetworkGroupPolicyRequestSchedulingThursday `json:"thursday,omitempty"`
	Friday *CreateNetworkGroupPolicyRequestSchedulingFriday `json:"friday,omitempty"`
	Saturday *CreateNetworkGroupPolicyRequestSchedulingSaturday `json:"saturday,omitempty"`
	Sunday *CreateNetworkGroupPolicyRequestSchedulingSunday `json:"sunday,omitempty"`
}

// NewCreateNetworkGroupPolicyRequestScheduling instantiates a new CreateNetworkGroupPolicyRequestScheduling object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkGroupPolicyRequestScheduling() *CreateNetworkGroupPolicyRequestScheduling {
	this := CreateNetworkGroupPolicyRequestScheduling{}
	return &this
}

// NewCreateNetworkGroupPolicyRequestSchedulingWithDefaults instantiates a new CreateNetworkGroupPolicyRequestScheduling object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkGroupPolicyRequestSchedulingWithDefaults() *CreateNetworkGroupPolicyRequestScheduling {
	this := CreateNetworkGroupPolicyRequestScheduling{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CreateNetworkGroupPolicyRequestScheduling) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMonday returns the Monday field value if set, zero value otherwise.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetMonday() CreateNetworkGroupPolicyRequestSchedulingMonday {
	if o == nil || o.Monday == nil {
		var ret CreateNetworkGroupPolicyRequestSchedulingMonday
		return ret
	}
	return *o.Monday
}

// GetMondayOk returns a tuple with the Monday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetMondayOk() (*CreateNetworkGroupPolicyRequestSchedulingMonday, bool) {
	if o == nil || o.Monday == nil {
		return nil, false
	}
	return o.Monday, true
}

// HasMonday returns a boolean if a field has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) HasMonday() bool {
	if o != nil && o.Monday != nil {
		return true
	}

	return false
}

// SetMonday gets a reference to the given CreateNetworkGroupPolicyRequestSchedulingMonday and assigns it to the Monday field.
func (o *CreateNetworkGroupPolicyRequestScheduling) SetMonday(v CreateNetworkGroupPolicyRequestSchedulingMonday) {
	o.Monday = &v
}

// GetTuesday returns the Tuesday field value if set, zero value otherwise.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetTuesday() CreateNetworkGroupPolicyRequestSchedulingTuesday {
	if o == nil || o.Tuesday == nil {
		var ret CreateNetworkGroupPolicyRequestSchedulingTuesday
		return ret
	}
	return *o.Tuesday
}

// GetTuesdayOk returns a tuple with the Tuesday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetTuesdayOk() (*CreateNetworkGroupPolicyRequestSchedulingTuesday, bool) {
	if o == nil || o.Tuesday == nil {
		return nil, false
	}
	return o.Tuesday, true
}

// HasTuesday returns a boolean if a field has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) HasTuesday() bool {
	if o != nil && o.Tuesday != nil {
		return true
	}

	return false
}

// SetTuesday gets a reference to the given CreateNetworkGroupPolicyRequestSchedulingTuesday and assigns it to the Tuesday field.
func (o *CreateNetworkGroupPolicyRequestScheduling) SetTuesday(v CreateNetworkGroupPolicyRequestSchedulingTuesday) {
	o.Tuesday = &v
}

// GetWednesday returns the Wednesday field value if set, zero value otherwise.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetWednesday() CreateNetworkGroupPolicyRequestSchedulingWednesday {
	if o == nil || o.Wednesday == nil {
		var ret CreateNetworkGroupPolicyRequestSchedulingWednesday
		return ret
	}
	return *o.Wednesday
}

// GetWednesdayOk returns a tuple with the Wednesday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetWednesdayOk() (*CreateNetworkGroupPolicyRequestSchedulingWednesday, bool) {
	if o == nil || o.Wednesday == nil {
		return nil, false
	}
	return o.Wednesday, true
}

// HasWednesday returns a boolean if a field has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) HasWednesday() bool {
	if o != nil && o.Wednesday != nil {
		return true
	}

	return false
}

// SetWednesday gets a reference to the given CreateNetworkGroupPolicyRequestSchedulingWednesday and assigns it to the Wednesday field.
func (o *CreateNetworkGroupPolicyRequestScheduling) SetWednesday(v CreateNetworkGroupPolicyRequestSchedulingWednesday) {
	o.Wednesday = &v
}

// GetThursday returns the Thursday field value if set, zero value otherwise.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetThursday() CreateNetworkGroupPolicyRequestSchedulingThursday {
	if o == nil || o.Thursday == nil {
		var ret CreateNetworkGroupPolicyRequestSchedulingThursday
		return ret
	}
	return *o.Thursday
}

// GetThursdayOk returns a tuple with the Thursday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetThursdayOk() (*CreateNetworkGroupPolicyRequestSchedulingThursday, bool) {
	if o == nil || o.Thursday == nil {
		return nil, false
	}
	return o.Thursday, true
}

// HasThursday returns a boolean if a field has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) HasThursday() bool {
	if o != nil && o.Thursday != nil {
		return true
	}

	return false
}

// SetThursday gets a reference to the given CreateNetworkGroupPolicyRequestSchedulingThursday and assigns it to the Thursday field.
func (o *CreateNetworkGroupPolicyRequestScheduling) SetThursday(v CreateNetworkGroupPolicyRequestSchedulingThursday) {
	o.Thursday = &v
}

// GetFriday returns the Friday field value if set, zero value otherwise.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetFriday() CreateNetworkGroupPolicyRequestSchedulingFriday {
	if o == nil || o.Friday == nil {
		var ret CreateNetworkGroupPolicyRequestSchedulingFriday
		return ret
	}
	return *o.Friday
}

// GetFridayOk returns a tuple with the Friday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetFridayOk() (*CreateNetworkGroupPolicyRequestSchedulingFriday, bool) {
	if o == nil || o.Friday == nil {
		return nil, false
	}
	return o.Friday, true
}

// HasFriday returns a boolean if a field has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) HasFriday() bool {
	if o != nil && o.Friday != nil {
		return true
	}

	return false
}

// SetFriday gets a reference to the given CreateNetworkGroupPolicyRequestSchedulingFriday and assigns it to the Friday field.
func (o *CreateNetworkGroupPolicyRequestScheduling) SetFriday(v CreateNetworkGroupPolicyRequestSchedulingFriday) {
	o.Friday = &v
}

// GetSaturday returns the Saturday field value if set, zero value otherwise.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetSaturday() CreateNetworkGroupPolicyRequestSchedulingSaturday {
	if o == nil || o.Saturday == nil {
		var ret CreateNetworkGroupPolicyRequestSchedulingSaturday
		return ret
	}
	return *o.Saturday
}

// GetSaturdayOk returns a tuple with the Saturday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetSaturdayOk() (*CreateNetworkGroupPolicyRequestSchedulingSaturday, bool) {
	if o == nil || o.Saturday == nil {
		return nil, false
	}
	return o.Saturday, true
}

// HasSaturday returns a boolean if a field has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) HasSaturday() bool {
	if o != nil && o.Saturday != nil {
		return true
	}

	return false
}

// SetSaturday gets a reference to the given CreateNetworkGroupPolicyRequestSchedulingSaturday and assigns it to the Saturday field.
func (o *CreateNetworkGroupPolicyRequestScheduling) SetSaturday(v CreateNetworkGroupPolicyRequestSchedulingSaturday) {
	o.Saturday = &v
}

// GetSunday returns the Sunday field value if set, zero value otherwise.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetSunday() CreateNetworkGroupPolicyRequestSchedulingSunday {
	if o == nil || o.Sunday == nil {
		var ret CreateNetworkGroupPolicyRequestSchedulingSunday
		return ret
	}
	return *o.Sunday
}

// GetSundayOk returns a tuple with the Sunday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) GetSundayOk() (*CreateNetworkGroupPolicyRequestSchedulingSunday, bool) {
	if o == nil || o.Sunday == nil {
		return nil, false
	}
	return o.Sunday, true
}

// HasSunday returns a boolean if a field has been set.
func (o *CreateNetworkGroupPolicyRequestScheduling) HasSunday() bool {
	if o != nil && o.Sunday != nil {
		return true
	}

	return false
}

// SetSunday gets a reference to the given CreateNetworkGroupPolicyRequestSchedulingSunday and assigns it to the Sunday field.
func (o *CreateNetworkGroupPolicyRequestScheduling) SetSunday(v CreateNetworkGroupPolicyRequestSchedulingSunday) {
	o.Sunday = &v
}

func (o CreateNetworkGroupPolicyRequestScheduling) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Monday != nil {
		toSerialize["monday"] = o.Monday
	}
	if o.Tuesday != nil {
		toSerialize["tuesday"] = o.Tuesday
	}
	if o.Wednesday != nil {
		toSerialize["wednesday"] = o.Wednesday
	}
	if o.Thursday != nil {
		toSerialize["thursday"] = o.Thursday
	}
	if o.Friday != nil {
		toSerialize["friday"] = o.Friday
	}
	if o.Saturday != nil {
		toSerialize["saturday"] = o.Saturday
	}
	if o.Sunday != nil {
		toSerialize["sunday"] = o.Sunday
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNetworkGroupPolicyRequestScheduling struct {
	value *CreateNetworkGroupPolicyRequestScheduling
	isSet bool
}

func (v NullableCreateNetworkGroupPolicyRequestScheduling) Get() *CreateNetworkGroupPolicyRequestScheduling {
	return v.value
}

func (v *NullableCreateNetworkGroupPolicyRequestScheduling) Set(val *CreateNetworkGroupPolicyRequestScheduling) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkGroupPolicyRequestScheduling) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkGroupPolicyRequestScheduling) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkGroupPolicyRequestScheduling(val *CreateNetworkGroupPolicyRequestScheduling) *NullableCreateNetworkGroupPolicyRequestScheduling {
	return &NullableCreateNetworkGroupPolicyRequestScheduling{value: val, isSet: true}
}

func (v NullableCreateNetworkGroupPolicyRequestScheduling) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkGroupPolicyRequestScheduling) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


