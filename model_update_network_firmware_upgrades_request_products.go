/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 July, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.23.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meraki

import (
	"encoding/json"
)

// UpdateNetworkFirmwareUpgradesRequestProducts Contains information about the network to update
type UpdateNetworkFirmwareUpgradesRequestProducts struct {
	Wireless *UpdateNetworkFirmwareUpgradesRequestProductsWireless `json:"wireless,omitempty"`
	Switch *UpdateNetworkFirmwareUpgradesRequestProductsWireless `json:"switch,omitempty"`
	Appliance *UpdateNetworkFirmwareUpgradesRequestProductsWireless `json:"appliance,omitempty"`
	Camera *UpdateNetworkFirmwareUpgradesRequestProductsWireless `json:"camera,omitempty"`
	VmxHost *UpdateNetworkFirmwareUpgradesRequestProductsWireless `json:"vmxHost,omitempty"`
	Environmental *UpdateNetworkFirmwareUpgradesRequestProductsWireless `json:"environmental,omitempty"`
	Sensor *UpdateNetworkFirmwareUpgradesRequestProductsWireless `json:"sensor,omitempty"`
	CellularGateway *UpdateNetworkFirmwareUpgradesRequestProductsWireless `json:"cellularGateway,omitempty"`
}

// NewUpdateNetworkFirmwareUpgradesRequestProducts instantiates a new UpdateNetworkFirmwareUpgradesRequestProducts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkFirmwareUpgradesRequestProducts() *UpdateNetworkFirmwareUpgradesRequestProducts {
	this := UpdateNetworkFirmwareUpgradesRequestProducts{}
	return &this
}

// NewUpdateNetworkFirmwareUpgradesRequestProductsWithDefaults instantiates a new UpdateNetworkFirmwareUpgradesRequestProducts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkFirmwareUpgradesRequestProductsWithDefaults() *UpdateNetworkFirmwareUpgradesRequestProducts {
	this := UpdateNetworkFirmwareUpgradesRequestProducts{}
	return &this
}

// GetWireless returns the Wireless field value if set, zero value otherwise.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetWireless() UpdateNetworkFirmwareUpgradesRequestProductsWireless {
	if o == nil || o.Wireless == nil {
		var ret UpdateNetworkFirmwareUpgradesRequestProductsWireless
		return ret
	}
	return *o.Wireless
}

// GetWirelessOk returns a tuple with the Wireless field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetWirelessOk() (*UpdateNetworkFirmwareUpgradesRequestProductsWireless, bool) {
	if o == nil || o.Wireless == nil {
		return nil, false
	}
	return o.Wireless, true
}

// HasWireless returns a boolean if a field has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) HasWireless() bool {
	if o != nil && o.Wireless != nil {
		return true
	}

	return false
}

// SetWireless gets a reference to the given UpdateNetworkFirmwareUpgradesRequestProductsWireless and assigns it to the Wireless field.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) SetWireless(v UpdateNetworkFirmwareUpgradesRequestProductsWireless) {
	o.Wireless = &v
}

// GetSwitch returns the Switch field value if set, zero value otherwise.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetSwitch() UpdateNetworkFirmwareUpgradesRequestProductsWireless {
	if o == nil || o.Switch == nil {
		var ret UpdateNetworkFirmwareUpgradesRequestProductsWireless
		return ret
	}
	return *o.Switch
}

// GetSwitchOk returns a tuple with the Switch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetSwitchOk() (*UpdateNetworkFirmwareUpgradesRequestProductsWireless, bool) {
	if o == nil || o.Switch == nil {
		return nil, false
	}
	return o.Switch, true
}

// HasSwitch returns a boolean if a field has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) HasSwitch() bool {
	if o != nil && o.Switch != nil {
		return true
	}

	return false
}

// SetSwitch gets a reference to the given UpdateNetworkFirmwareUpgradesRequestProductsWireless and assigns it to the Switch field.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) SetSwitch(v UpdateNetworkFirmwareUpgradesRequestProductsWireless) {
	o.Switch = &v
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetAppliance() UpdateNetworkFirmwareUpgradesRequestProductsWireless {
	if o == nil || o.Appliance == nil {
		var ret UpdateNetworkFirmwareUpgradesRequestProductsWireless
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetApplianceOk() (*UpdateNetworkFirmwareUpgradesRequestProductsWireless, bool) {
	if o == nil || o.Appliance == nil {
		return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) HasAppliance() bool {
	if o != nil && o.Appliance != nil {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given UpdateNetworkFirmwareUpgradesRequestProductsWireless and assigns it to the Appliance field.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) SetAppliance(v UpdateNetworkFirmwareUpgradesRequestProductsWireless) {
	o.Appliance = &v
}

// GetCamera returns the Camera field value if set, zero value otherwise.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetCamera() UpdateNetworkFirmwareUpgradesRequestProductsWireless {
	if o == nil || o.Camera == nil {
		var ret UpdateNetworkFirmwareUpgradesRequestProductsWireless
		return ret
	}
	return *o.Camera
}

// GetCameraOk returns a tuple with the Camera field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetCameraOk() (*UpdateNetworkFirmwareUpgradesRequestProductsWireless, bool) {
	if o == nil || o.Camera == nil {
		return nil, false
	}
	return o.Camera, true
}

// HasCamera returns a boolean if a field has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) HasCamera() bool {
	if o != nil && o.Camera != nil {
		return true
	}

	return false
}

// SetCamera gets a reference to the given UpdateNetworkFirmwareUpgradesRequestProductsWireless and assigns it to the Camera field.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) SetCamera(v UpdateNetworkFirmwareUpgradesRequestProductsWireless) {
	o.Camera = &v
}

// GetVmxHost returns the VmxHost field value if set, zero value otherwise.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetVmxHost() UpdateNetworkFirmwareUpgradesRequestProductsWireless {
	if o == nil || o.VmxHost == nil {
		var ret UpdateNetworkFirmwareUpgradesRequestProductsWireless
		return ret
	}
	return *o.VmxHost
}

// GetVmxHostOk returns a tuple with the VmxHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetVmxHostOk() (*UpdateNetworkFirmwareUpgradesRequestProductsWireless, bool) {
	if o == nil || o.VmxHost == nil {
		return nil, false
	}
	return o.VmxHost, true
}

// HasVmxHost returns a boolean if a field has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) HasVmxHost() bool {
	if o != nil && o.VmxHost != nil {
		return true
	}

	return false
}

// SetVmxHost gets a reference to the given UpdateNetworkFirmwareUpgradesRequestProductsWireless and assigns it to the VmxHost field.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) SetVmxHost(v UpdateNetworkFirmwareUpgradesRequestProductsWireless) {
	o.VmxHost = &v
}

// GetEnvironmental returns the Environmental field value if set, zero value otherwise.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetEnvironmental() UpdateNetworkFirmwareUpgradesRequestProductsWireless {
	if o == nil || o.Environmental == nil {
		var ret UpdateNetworkFirmwareUpgradesRequestProductsWireless
		return ret
	}
	return *o.Environmental
}

// GetEnvironmentalOk returns a tuple with the Environmental field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetEnvironmentalOk() (*UpdateNetworkFirmwareUpgradesRequestProductsWireless, bool) {
	if o == nil || o.Environmental == nil {
		return nil, false
	}
	return o.Environmental, true
}

// HasEnvironmental returns a boolean if a field has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) HasEnvironmental() bool {
	if o != nil && o.Environmental != nil {
		return true
	}

	return false
}

// SetEnvironmental gets a reference to the given UpdateNetworkFirmwareUpgradesRequestProductsWireless and assigns it to the Environmental field.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) SetEnvironmental(v UpdateNetworkFirmwareUpgradesRequestProductsWireless) {
	o.Environmental = &v
}

// GetSensor returns the Sensor field value if set, zero value otherwise.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetSensor() UpdateNetworkFirmwareUpgradesRequestProductsWireless {
	if o == nil || o.Sensor == nil {
		var ret UpdateNetworkFirmwareUpgradesRequestProductsWireless
		return ret
	}
	return *o.Sensor
}

// GetSensorOk returns a tuple with the Sensor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetSensorOk() (*UpdateNetworkFirmwareUpgradesRequestProductsWireless, bool) {
	if o == nil || o.Sensor == nil {
		return nil, false
	}
	return o.Sensor, true
}

// HasSensor returns a boolean if a field has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) HasSensor() bool {
	if o != nil && o.Sensor != nil {
		return true
	}

	return false
}

// SetSensor gets a reference to the given UpdateNetworkFirmwareUpgradesRequestProductsWireless and assigns it to the Sensor field.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) SetSensor(v UpdateNetworkFirmwareUpgradesRequestProductsWireless) {
	o.Sensor = &v
}

// GetCellularGateway returns the CellularGateway field value if set, zero value otherwise.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetCellularGateway() UpdateNetworkFirmwareUpgradesRequestProductsWireless {
	if o == nil || o.CellularGateway == nil {
		var ret UpdateNetworkFirmwareUpgradesRequestProductsWireless
		return ret
	}
	return *o.CellularGateway
}

// GetCellularGatewayOk returns a tuple with the CellularGateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) GetCellularGatewayOk() (*UpdateNetworkFirmwareUpgradesRequestProductsWireless, bool) {
	if o == nil || o.CellularGateway == nil {
		return nil, false
	}
	return o.CellularGateway, true
}

// HasCellularGateway returns a boolean if a field has been set.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) HasCellularGateway() bool {
	if o != nil && o.CellularGateway != nil {
		return true
	}

	return false
}

// SetCellularGateway gets a reference to the given UpdateNetworkFirmwareUpgradesRequestProductsWireless and assigns it to the CellularGateway field.
func (o *UpdateNetworkFirmwareUpgradesRequestProducts) SetCellularGateway(v UpdateNetworkFirmwareUpgradesRequestProductsWireless) {
	o.CellularGateway = &v
}

func (o UpdateNetworkFirmwareUpgradesRequestProducts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Wireless != nil {
		toSerialize["wireless"] = o.Wireless
	}
	if o.Switch != nil {
		toSerialize["switch"] = o.Switch
	}
	if o.Appliance != nil {
		toSerialize["appliance"] = o.Appliance
	}
	if o.Camera != nil {
		toSerialize["camera"] = o.Camera
	}
	if o.VmxHost != nil {
		toSerialize["vmxHost"] = o.VmxHost
	}
	if o.Environmental != nil {
		toSerialize["environmental"] = o.Environmental
	}
	if o.Sensor != nil {
		toSerialize["sensor"] = o.Sensor
	}
	if o.CellularGateway != nil {
		toSerialize["cellularGateway"] = o.CellularGateway
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateNetworkFirmwareUpgradesRequestProducts struct {
	value *UpdateNetworkFirmwareUpgradesRequestProducts
	isSet bool
}

func (v NullableUpdateNetworkFirmwareUpgradesRequestProducts) Get() *UpdateNetworkFirmwareUpgradesRequestProducts {
	return v.value
}

func (v *NullableUpdateNetworkFirmwareUpgradesRequestProducts) Set(val *UpdateNetworkFirmwareUpgradesRequestProducts) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkFirmwareUpgradesRequestProducts) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkFirmwareUpgradesRequestProducts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkFirmwareUpgradesRequestProducts(val *UpdateNetworkFirmwareUpgradesRequestProducts) *NullableUpdateNetworkFirmwareUpgradesRequestProducts {
	return &NullableUpdateNetworkFirmwareUpgradesRequestProducts{value: val, isSet: true}
}

func (v NullableUpdateNetworkFirmwareUpgradesRequestProducts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkFirmwareUpgradesRequestProducts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


