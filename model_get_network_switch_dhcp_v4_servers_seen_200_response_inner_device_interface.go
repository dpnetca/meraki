/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 July, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.23.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meraki

import (
	"encoding/json"
)

// GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface Interface attributes of the DHCPv4 server. Only for configured servers.
type GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface struct {
	// Interface name.
	Name *string `json:"name,omitempty"`
	// Url link to interface.
	Url *string `json:"url,omitempty"`
}

// NewGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface instantiates a new GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface() *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface {
	this := GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface{}
	return &this
}

// NewGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterfaceWithDefaults instantiates a new GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterfaceWithDefaults() *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface {
	this := GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) SetUrl(v string) {
	o.Url = &v
}

func (o GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface struct {
	value *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface
	isSet bool
}

func (v NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) Get() *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface {
	return v.value
}

func (v *NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) Set(val *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface(val *GetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) *NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface {
	return &NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface{value: val, isSet: true}
}

func (v NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNetworkSwitchDhcpV4ServersSeen200ResponseInnerDeviceInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


