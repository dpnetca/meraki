/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 July, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.23.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meraki

import (
	"encoding/json"
)

// RemoveNetworkSwitchStackRequest struct for RemoveNetworkSwitchStackRequest
type RemoveNetworkSwitchStackRequest struct {
	// The serial of the switch to be removed
	Serial string `json:"serial"`
}

// NewRemoveNetworkSwitchStackRequest instantiates a new RemoveNetworkSwitchStackRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoveNetworkSwitchStackRequest(serial string) *RemoveNetworkSwitchStackRequest {
	this := RemoveNetworkSwitchStackRequest{}
	this.Serial = serial
	return &this
}

// NewRemoveNetworkSwitchStackRequestWithDefaults instantiates a new RemoveNetworkSwitchStackRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoveNetworkSwitchStackRequestWithDefaults() *RemoveNetworkSwitchStackRequest {
	this := RemoveNetworkSwitchStackRequest{}
	return &this
}

// GetSerial returns the Serial field value
func (o *RemoveNetworkSwitchStackRequest) GetSerial() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Serial
}

// GetSerialOk returns a tuple with the Serial field value
// and a boolean to check if the value has been set.
func (o *RemoveNetworkSwitchStackRequest) GetSerialOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Serial, true
}

// SetSerial sets field value
func (o *RemoveNetworkSwitchStackRequest) SetSerial(v string) {
	o.Serial = v
}

func (o RemoveNetworkSwitchStackRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serial"] = o.Serial
	}
	return json.Marshal(toSerialize)
}

type NullableRemoveNetworkSwitchStackRequest struct {
	value *RemoveNetworkSwitchStackRequest
	isSet bool
}

func (v NullableRemoveNetworkSwitchStackRequest) Get() *RemoveNetworkSwitchStackRequest {
	return v.value
}

func (v *NullableRemoveNetworkSwitchStackRequest) Set(val *RemoveNetworkSwitchStackRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoveNetworkSwitchStackRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoveNetworkSwitchStackRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoveNetworkSwitchStackRequest(val *RemoveNetworkSwitchStackRequest) *NullableRemoveNetworkSwitchStackRequest {
	return &NullableRemoveNetworkSwitchStackRequest{value: val, isSet: true}
}

func (v NullableRemoveNetworkSwitchStackRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoveNetworkSwitchStackRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


