/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 06 July, 2022 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.23.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meraki

import (
	"encoding/json"
)

// CreateNetworkWirelessRfProfileRequestPerSsidSettings11 Settings for SSID 11
type CreateNetworkWirelessRfProfileRequestPerSsidSettings11 struct {
	// Sets min bitrate (Mbps) of this SSID. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'.
	MinBitrate *int32 `json:"minBitrate,omitempty"`
	// Choice between 'dual', '2.4ghz' or '5ghz'.
	BandOperationMode *string `json:"bandOperationMode,omitempty"`
	// Steers client to most open band between 2.4 GHz and 5 GHz. Can be either true or false.
	BandSteeringEnabled *bool `json:"bandSteeringEnabled,omitempty"`
}

// NewCreateNetworkWirelessRfProfileRequestPerSsidSettings11 instantiates a new CreateNetworkWirelessRfProfileRequestPerSsidSettings11 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkWirelessRfProfileRequestPerSsidSettings11() *CreateNetworkWirelessRfProfileRequestPerSsidSettings11 {
	this := CreateNetworkWirelessRfProfileRequestPerSsidSettings11{}
	return &this
}

// NewCreateNetworkWirelessRfProfileRequestPerSsidSettings11WithDefaults instantiates a new CreateNetworkWirelessRfProfileRequestPerSsidSettings11 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkWirelessRfProfileRequestPerSsidSettings11WithDefaults() *CreateNetworkWirelessRfProfileRequestPerSsidSettings11 {
	this := CreateNetworkWirelessRfProfileRequestPerSsidSettings11{}
	return &this
}

// GetMinBitrate returns the MinBitrate field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) GetMinBitrate() int32 {
	if o == nil || o.MinBitrate == nil {
		var ret int32
		return ret
	}
	return *o.MinBitrate
}

// GetMinBitrateOk returns a tuple with the MinBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) GetMinBitrateOk() (*int32, bool) {
	if o == nil || o.MinBitrate == nil {
		return nil, false
	}
	return o.MinBitrate, true
}

// HasMinBitrate returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) HasMinBitrate() bool {
	if o != nil && o.MinBitrate != nil {
		return true
	}

	return false
}

// SetMinBitrate gets a reference to the given int32 and assigns it to the MinBitrate field.
func (o *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) SetMinBitrate(v int32) {
	o.MinBitrate = &v
}

// GetBandOperationMode returns the BandOperationMode field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) GetBandOperationMode() string {
	if o == nil || o.BandOperationMode == nil {
		var ret string
		return ret
	}
	return *o.BandOperationMode
}

// GetBandOperationModeOk returns a tuple with the BandOperationMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) GetBandOperationModeOk() (*string, bool) {
	if o == nil || o.BandOperationMode == nil {
		return nil, false
	}
	return o.BandOperationMode, true
}

// HasBandOperationMode returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) HasBandOperationMode() bool {
	if o != nil && o.BandOperationMode != nil {
		return true
	}

	return false
}

// SetBandOperationMode gets a reference to the given string and assigns it to the BandOperationMode field.
func (o *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) SetBandOperationMode(v string) {
	o.BandOperationMode = &v
}

// GetBandSteeringEnabled returns the BandSteeringEnabled field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) GetBandSteeringEnabled() bool {
	if o == nil || o.BandSteeringEnabled == nil {
		var ret bool
		return ret
	}
	return *o.BandSteeringEnabled
}

// GetBandSteeringEnabledOk returns a tuple with the BandSteeringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) GetBandSteeringEnabledOk() (*bool, bool) {
	if o == nil || o.BandSteeringEnabled == nil {
		return nil, false
	}
	return o.BandSteeringEnabled, true
}

// HasBandSteeringEnabled returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) HasBandSteeringEnabled() bool {
	if o != nil && o.BandSteeringEnabled != nil {
		return true
	}

	return false
}

// SetBandSteeringEnabled gets a reference to the given bool and assigns it to the BandSteeringEnabled field.
func (o *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) SetBandSteeringEnabled(v bool) {
	o.BandSteeringEnabled = &v
}

func (o CreateNetworkWirelessRfProfileRequestPerSsidSettings11) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MinBitrate != nil {
		toSerialize["minBitrate"] = o.MinBitrate
	}
	if o.BandOperationMode != nil {
		toSerialize["bandOperationMode"] = o.BandOperationMode
	}
	if o.BandSteeringEnabled != nil {
		toSerialize["bandSteeringEnabled"] = o.BandSteeringEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableCreateNetworkWirelessRfProfileRequestPerSsidSettings11 struct {
	value *CreateNetworkWirelessRfProfileRequestPerSsidSettings11
	isSet bool
}

func (v NullableCreateNetworkWirelessRfProfileRequestPerSsidSettings11) Get() *CreateNetworkWirelessRfProfileRequestPerSsidSettings11 {
	return v.value
}

func (v *NullableCreateNetworkWirelessRfProfileRequestPerSsidSettings11) Set(val *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkWirelessRfProfileRequestPerSsidSettings11) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkWirelessRfProfileRequestPerSsidSettings11) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkWirelessRfProfileRequestPerSsidSettings11(val *CreateNetworkWirelessRfProfileRequestPerSsidSettings11) *NullableCreateNetworkWirelessRfProfileRequestPerSsidSettings11 {
	return &NullableCreateNetworkWirelessRfProfileRequestPerSsidSettings11{value: val, isSet: true}
}

func (v NullableCreateNetworkWirelessRfProfileRequestPerSsidSettings11) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkWirelessRfProfileRequestPerSsidSettings11) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


