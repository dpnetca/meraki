/*
Meraki Dashboard API

The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 05 April, 2023 > > [Recent Updates](https://meraki.io/whats-new/)  ---  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com) 

API version: 1.32.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package meraki

import (
	"encoding/json"
)

// checks if the CreateNetworkWirelessRfProfile201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkWirelessRfProfile201Response{}

// CreateNetworkWirelessRfProfile201Response struct for CreateNetworkWirelessRfProfile201Response
type CreateNetworkWirelessRfProfile201Response struct {
	// The name of the new profile. Must be unique.
	Id *string `json:"id,omitempty"`
	// The network ID of the RF Profile
	NetworkId *string `json:"networkId,omitempty"`
	// The name of the new profile. Must be unique. This param is required on creation.
	Name *string `json:"name,omitempty"`
	// Steers client to best available access point. Can be either true or false. Defaults to true.
	ClientBalancingEnabled *bool `json:"clientBalancingEnabled,omitempty"`
	// Minimum bitrate can be set to either 'band' or 'ssid'. Defaults to band.
	MinBitrateType *string `json:"minBitrateType,omitempty"`
	// Band selection can be set to either 'ssid' or 'ap'. This param is required on creation.
	BandSelectionType *string `json:"bandSelectionType,omitempty"`
	ApBandSettings *CreateNetworkWirelessRfProfile201ResponseApBandSettings `json:"apBandSettings,omitempty"`
	TwoFourGhzSettings *CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings `json:"twoFourGhzSettings,omitempty"`
	FiveGhzSettings *CreateNetworkWirelessRfProfileRequestFiveGhzSettings `json:"fiveGhzSettings,omitempty"`
	Transmission *CreateNetworkWirelessRfProfileRequestTransmission `json:"transmission,omitempty"`
	PerSsidSettings *CreateNetworkWirelessRfProfile201ResponsePerSsidSettings `json:"perSsidSettings,omitempty"`
}

// NewCreateNetworkWirelessRfProfile201Response instantiates a new CreateNetworkWirelessRfProfile201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkWirelessRfProfile201Response() *CreateNetworkWirelessRfProfile201Response {
	this := CreateNetworkWirelessRfProfile201Response{}
	return &this
}

// NewCreateNetworkWirelessRfProfile201ResponseWithDefaults instantiates a new CreateNetworkWirelessRfProfile201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkWirelessRfProfile201ResponseWithDefaults() *CreateNetworkWirelessRfProfile201Response {
	this := CreateNetworkWirelessRfProfile201Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfile201Response) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfile201Response) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfile201Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateNetworkWirelessRfProfile201Response) SetId(v string) {
	o.Id = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfile201Response) GetNetworkId() string {
	if o == nil || IsNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfile201Response) GetNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfile201Response) HasNetworkId() bool {
	if o != nil && !IsNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *CreateNetworkWirelessRfProfile201Response) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfile201Response) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfile201Response) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfile201Response) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateNetworkWirelessRfProfile201Response) SetName(v string) {
	o.Name = &v
}

// GetClientBalancingEnabled returns the ClientBalancingEnabled field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfile201Response) GetClientBalancingEnabled() bool {
	if o == nil || IsNil(o.ClientBalancingEnabled) {
		var ret bool
		return ret
	}
	return *o.ClientBalancingEnabled
}

// GetClientBalancingEnabledOk returns a tuple with the ClientBalancingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfile201Response) GetClientBalancingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ClientBalancingEnabled) {
		return nil, false
	}
	return o.ClientBalancingEnabled, true
}

// HasClientBalancingEnabled returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfile201Response) HasClientBalancingEnabled() bool {
	if o != nil && !IsNil(o.ClientBalancingEnabled) {
		return true
	}

	return false
}

// SetClientBalancingEnabled gets a reference to the given bool and assigns it to the ClientBalancingEnabled field.
func (o *CreateNetworkWirelessRfProfile201Response) SetClientBalancingEnabled(v bool) {
	o.ClientBalancingEnabled = &v
}

// GetMinBitrateType returns the MinBitrateType field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfile201Response) GetMinBitrateType() string {
	if o == nil || IsNil(o.MinBitrateType) {
		var ret string
		return ret
	}
	return *o.MinBitrateType
}

// GetMinBitrateTypeOk returns a tuple with the MinBitrateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfile201Response) GetMinBitrateTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MinBitrateType) {
		return nil, false
	}
	return o.MinBitrateType, true
}

// HasMinBitrateType returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfile201Response) HasMinBitrateType() bool {
	if o != nil && !IsNil(o.MinBitrateType) {
		return true
	}

	return false
}

// SetMinBitrateType gets a reference to the given string and assigns it to the MinBitrateType field.
func (o *CreateNetworkWirelessRfProfile201Response) SetMinBitrateType(v string) {
	o.MinBitrateType = &v
}

// GetBandSelectionType returns the BandSelectionType field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfile201Response) GetBandSelectionType() string {
	if o == nil || IsNil(o.BandSelectionType) {
		var ret string
		return ret
	}
	return *o.BandSelectionType
}

// GetBandSelectionTypeOk returns a tuple with the BandSelectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfile201Response) GetBandSelectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BandSelectionType) {
		return nil, false
	}
	return o.BandSelectionType, true
}

// HasBandSelectionType returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfile201Response) HasBandSelectionType() bool {
	if o != nil && !IsNil(o.BandSelectionType) {
		return true
	}

	return false
}

// SetBandSelectionType gets a reference to the given string and assigns it to the BandSelectionType field.
func (o *CreateNetworkWirelessRfProfile201Response) SetBandSelectionType(v string) {
	o.BandSelectionType = &v
}

// GetApBandSettings returns the ApBandSettings field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfile201Response) GetApBandSettings() CreateNetworkWirelessRfProfile201ResponseApBandSettings {
	if o == nil || IsNil(o.ApBandSettings) {
		var ret CreateNetworkWirelessRfProfile201ResponseApBandSettings
		return ret
	}
	return *o.ApBandSettings
}

// GetApBandSettingsOk returns a tuple with the ApBandSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfile201Response) GetApBandSettingsOk() (*CreateNetworkWirelessRfProfile201ResponseApBandSettings, bool) {
	if o == nil || IsNil(o.ApBandSettings) {
		return nil, false
	}
	return o.ApBandSettings, true
}

// HasApBandSettings returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfile201Response) HasApBandSettings() bool {
	if o != nil && !IsNil(o.ApBandSettings) {
		return true
	}

	return false
}

// SetApBandSettings gets a reference to the given CreateNetworkWirelessRfProfile201ResponseApBandSettings and assigns it to the ApBandSettings field.
func (o *CreateNetworkWirelessRfProfile201Response) SetApBandSettings(v CreateNetworkWirelessRfProfile201ResponseApBandSettings) {
	o.ApBandSettings = &v
}

// GetTwoFourGhzSettings returns the TwoFourGhzSettings field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfile201Response) GetTwoFourGhzSettings() CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings {
	if o == nil || IsNil(o.TwoFourGhzSettings) {
		var ret CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings
		return ret
	}
	return *o.TwoFourGhzSettings
}

// GetTwoFourGhzSettingsOk returns a tuple with the TwoFourGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfile201Response) GetTwoFourGhzSettingsOk() (*CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings, bool) {
	if o == nil || IsNil(o.TwoFourGhzSettings) {
		return nil, false
	}
	return o.TwoFourGhzSettings, true
}

// HasTwoFourGhzSettings returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfile201Response) HasTwoFourGhzSettings() bool {
	if o != nil && !IsNil(o.TwoFourGhzSettings) {
		return true
	}

	return false
}

// SetTwoFourGhzSettings gets a reference to the given CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings and assigns it to the TwoFourGhzSettings field.
func (o *CreateNetworkWirelessRfProfile201Response) SetTwoFourGhzSettings(v CreateNetworkWirelessRfProfileRequestTwoFourGhzSettings) {
	o.TwoFourGhzSettings = &v
}

// GetFiveGhzSettings returns the FiveGhzSettings field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfile201Response) GetFiveGhzSettings() CreateNetworkWirelessRfProfileRequestFiveGhzSettings {
	if o == nil || IsNil(o.FiveGhzSettings) {
		var ret CreateNetworkWirelessRfProfileRequestFiveGhzSettings
		return ret
	}
	return *o.FiveGhzSettings
}

// GetFiveGhzSettingsOk returns a tuple with the FiveGhzSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfile201Response) GetFiveGhzSettingsOk() (*CreateNetworkWirelessRfProfileRequestFiveGhzSettings, bool) {
	if o == nil || IsNil(o.FiveGhzSettings) {
		return nil, false
	}
	return o.FiveGhzSettings, true
}

// HasFiveGhzSettings returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfile201Response) HasFiveGhzSettings() bool {
	if o != nil && !IsNil(o.FiveGhzSettings) {
		return true
	}

	return false
}

// SetFiveGhzSettings gets a reference to the given CreateNetworkWirelessRfProfileRequestFiveGhzSettings and assigns it to the FiveGhzSettings field.
func (o *CreateNetworkWirelessRfProfile201Response) SetFiveGhzSettings(v CreateNetworkWirelessRfProfileRequestFiveGhzSettings) {
	o.FiveGhzSettings = &v
}

// GetTransmission returns the Transmission field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfile201Response) GetTransmission() CreateNetworkWirelessRfProfileRequestTransmission {
	if o == nil || IsNil(o.Transmission) {
		var ret CreateNetworkWirelessRfProfileRequestTransmission
		return ret
	}
	return *o.Transmission
}

// GetTransmissionOk returns a tuple with the Transmission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfile201Response) GetTransmissionOk() (*CreateNetworkWirelessRfProfileRequestTransmission, bool) {
	if o == nil || IsNil(o.Transmission) {
		return nil, false
	}
	return o.Transmission, true
}

// HasTransmission returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfile201Response) HasTransmission() bool {
	if o != nil && !IsNil(o.Transmission) {
		return true
	}

	return false
}

// SetTransmission gets a reference to the given CreateNetworkWirelessRfProfileRequestTransmission and assigns it to the Transmission field.
func (o *CreateNetworkWirelessRfProfile201Response) SetTransmission(v CreateNetworkWirelessRfProfileRequestTransmission) {
	o.Transmission = &v
}

// GetPerSsidSettings returns the PerSsidSettings field value if set, zero value otherwise.
func (o *CreateNetworkWirelessRfProfile201Response) GetPerSsidSettings() CreateNetworkWirelessRfProfile201ResponsePerSsidSettings {
	if o == nil || IsNil(o.PerSsidSettings) {
		var ret CreateNetworkWirelessRfProfile201ResponsePerSsidSettings
		return ret
	}
	return *o.PerSsidSettings
}

// GetPerSsidSettingsOk returns a tuple with the PerSsidSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkWirelessRfProfile201Response) GetPerSsidSettingsOk() (*CreateNetworkWirelessRfProfile201ResponsePerSsidSettings, bool) {
	if o == nil || IsNil(o.PerSsidSettings) {
		return nil, false
	}
	return o.PerSsidSettings, true
}

// HasPerSsidSettings returns a boolean if a field has been set.
func (o *CreateNetworkWirelessRfProfile201Response) HasPerSsidSettings() bool {
	if o != nil && !IsNil(o.PerSsidSettings) {
		return true
	}

	return false
}

// SetPerSsidSettings gets a reference to the given CreateNetworkWirelessRfProfile201ResponsePerSsidSettings and assigns it to the PerSsidSettings field.
func (o *CreateNetworkWirelessRfProfile201Response) SetPerSsidSettings(v CreateNetworkWirelessRfProfile201ResponsePerSsidSettings) {
	o.PerSsidSettings = &v
}

func (o CreateNetworkWirelessRfProfile201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkWirelessRfProfile201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ClientBalancingEnabled) {
		toSerialize["clientBalancingEnabled"] = o.ClientBalancingEnabled
	}
	if !IsNil(o.MinBitrateType) {
		toSerialize["minBitrateType"] = o.MinBitrateType
	}
	if !IsNil(o.BandSelectionType) {
		toSerialize["bandSelectionType"] = o.BandSelectionType
	}
	if !IsNil(o.ApBandSettings) {
		toSerialize["apBandSettings"] = o.ApBandSettings
	}
	if !IsNil(o.TwoFourGhzSettings) {
		toSerialize["twoFourGhzSettings"] = o.TwoFourGhzSettings
	}
	if !IsNil(o.FiveGhzSettings) {
		toSerialize["fiveGhzSettings"] = o.FiveGhzSettings
	}
	if !IsNil(o.Transmission) {
		toSerialize["transmission"] = o.Transmission
	}
	if !IsNil(o.PerSsidSettings) {
		toSerialize["perSsidSettings"] = o.PerSsidSettings
	}
	return toSerialize, nil
}

type NullableCreateNetworkWirelessRfProfile201Response struct {
	value *CreateNetworkWirelessRfProfile201Response
	isSet bool
}

func (v NullableCreateNetworkWirelessRfProfile201Response) Get() *CreateNetworkWirelessRfProfile201Response {
	return v.value
}

func (v *NullableCreateNetworkWirelessRfProfile201Response) Set(val *CreateNetworkWirelessRfProfile201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkWirelessRfProfile201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkWirelessRfProfile201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkWirelessRfProfile201Response(val *CreateNetworkWirelessRfProfile201Response) *NullableCreateNetworkWirelessRfProfile201Response {
	return &NullableCreateNetworkWirelessRfProfile201Response{value: val, isSet: true}
}

func (v NullableCreateNetworkWirelessRfProfile201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkWirelessRfProfile201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


